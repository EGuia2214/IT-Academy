-- MySQL Script generated by MySQL Workbench
-- Thu Jul  1 16:51:44 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema youtube
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `youtube` ;

-- -----------------------------------------------------
-- Schema youtube
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `youtube` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema youtube
-- -----------------------------------------------------
USE `youtube` ;

-- -----------------------------------------------------
-- Table `youtube`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`user` ;

CREATE TABLE IF NOT EXISTS `youtube`.`user` (
  `id_user` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NULL,
  `password` VARCHAR(15) NULL,
  `nombre_user` VARCHAR(100) NULL,
  `apellido_user` VARCHAR(100) NULL,
  `fecha_nacimiento` DATE NULL,
  `sexo` ENUM('varon', 'mujer') NULL,
  `pais` VARCHAR(45) NULL,
  `cod_postal` VARCHAR(10) NULL,
  PRIMARY KEY (`id_user`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`video`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`video` ;

CREATE TABLE IF NOT EXISTS `youtube`.`video` (
  `id_video` INT NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(45) NULL,
  `descripicion` VARCHAR(255) NULL,
  `tamano_mb` VARCHAR(10) NULL,
  `nombre_arch` VARCHAR(45) NULL,
  `duracion_arch_vid` VARCHAR(45) NULL,
  `thumbnail` VARCHAR(45) NULL,
  `reproducciones` INT NULL,
  `likes` INT NULL,
  `dislikes` INT NULL,
  `estado` ENUM('publico', 'oculto', 'privado') NULL,
  PRIMARY KEY (`id_video`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`user_public_video`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`user_public_video` ;

CREATE TABLE IF NOT EXISTS `youtube`.`user_public_video` (
  `user_id_user` INT NOT NULL,
  `video_id_video` INT NOT NULL,
  `fecha_public` DATE NULL,
  PRIMARY KEY (`user_id_user`, `video_id_video`),
  INDEX `fk_user_public_video_video1_idx` (`video_id_video` ASC) ,
  CONSTRAINT `fk_user`
    FOREIGN KEY (`user_id_user`)
    REFERENCES `youtube`.`user` (`id_user`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_video`
    FOREIGN KEY (`video_id_video`)
    REFERENCES `youtube`.`video` (`id_video`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`etiquetas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`etiquetas` ;

CREATE TABLE IF NOT EXISTS `youtube`.`etiquetas` (
  `id_etiquetas` INT NOT NULL AUTO_INCREMENT,
  `nombre_etiqueta` VARCHAR(45) NULL,
  PRIMARY KEY (`id_etiquetas`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`etiquetas_en_video`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`etiquetas_en_video` ;

CREATE TABLE IF NOT EXISTS `youtube`.`etiquetas_en_video` (
  `video_id_video` INT NOT NULL,
  `etiquetas_id_etiquetas` INT NOT NULL,
  PRIMARY KEY (`video_id_video`, `etiquetas_id_etiquetas`),
  INDEX `fk_etiquetas_en_video_etiquetas1_idx` (`etiquetas_id_etiquetas` ASC) ,
  CONSTRAINT `fk_etiquetas_en_video_video1`
    FOREIGN KEY (`video_id_video`)
    REFERENCES `youtube`.`video` (`id_video`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_etiquetas_en_video_etiquetas1`
    FOREIGN KEY (`etiquetas_id_etiquetas`)
    REFERENCES `youtube`.`etiquetas` (`id_etiquetas`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`canal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`canal` ;

CREATE TABLE IF NOT EXISTS `youtube`.`canal` (
  `id_canal` INT NOT NULL AUTO_INCREMENT,
  `nombre_canal` VARCHAR(45) NULL,
  `descripcion_canal` VARCHAR(255) NULL,
  `fecha_creacion` DATE NULL,
  PRIMARY KEY (`id_canal`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`suscripciones`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`suscripciones` ;

CREATE TABLE IF NOT EXISTS `youtube`.`suscripciones` (
  `user_id_user` INT NOT NULL,
  `canal_id_canal` INT NOT NULL,
  INDEX `fk_suscripciones_canal1_idx` (`canal_id_canal` ASC) ,
  PRIMARY KEY (`user_id_user`, `canal_id_canal`),
  CONSTRAINT `fk_suscripciones_user1`
    FOREIGN KEY (`user_id_user`)
    REFERENCES `youtube`.`user` (`id_user`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_suscripciones_canal1`
    FOREIGN KEY (`canal_id_canal`)
    REFERENCES `youtube`.`canal` (`id_canal`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`likes_dislikes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`likes_dislikes` ;

CREATE TABLE IF NOT EXISTS `youtube`.`likes_dislikes` (
  `user_id_user` INT NOT NULL,
  `video_id_video` INT NOT NULL,
  `likes_o_dislikes` TINYINT NULL,
  `fecha_hora_dis_like` DATETIME NULL,
  INDEX `fk_likes_dislikes_video1_idx` (`video_id_video` ASC) ,
  PRIMARY KEY (`user_id_user`, `video_id_video`),
  CONSTRAINT `fk_likes_dislikes_user1`
    FOREIGN KEY (`user_id_user`)
    REFERENCES `youtube`.`user` (`id_user`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_likes_dislikes_video1`
    FOREIGN KEY (`video_id_video`)
    REFERENCES `youtube`.`video` (`id_video`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`playlist`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`playlist` ;

CREATE TABLE IF NOT EXISTS `youtube`.`playlist` (
  `id_playlist` INT NOT NULL AUTO_INCREMENT,
  `user_id_user` INT NOT NULL,
  `fecha_playlist` DATE NULL,
  `nombre_playlist` VARCHAR(45) NULL,
  PRIMARY KEY (`id_playlist`),
  INDEX `fk_playlist_user1_idx` (`user_id_user` ASC) ,
  CONSTRAINT `fk_playlist_user1`
    FOREIGN KEY (`user_id_user`)
    REFERENCES `youtube`.`user` (`id_user`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`comentarios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`comentarios` ;

CREATE TABLE IF NOT EXISTS `youtube`.`comentarios` (
  `id_comentarios` INT NOT NULL AUTO_INCREMENT,
  `user_id_user` INT NOT NULL,
  `video_id_video` INT NOT NULL,
  `texto_comentario` VARCHAR(255) NULL,
  `fecha_comentario` DATE NULL,
  PRIMARY KEY (`id_comentarios`, `user_id_user`, `video_id_video`),
  INDEX `fk_comentarios_user1_idx` (`user_id_user` ASC) ,
  INDEX `fk_comentarios_video1_idx` (`video_id_video` ASC) ,
  CONSTRAINT `fk_comentarios_user1`
    FOREIGN KEY (`user_id_user`)
    REFERENCES `youtube`.`user` (`id_user`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_comentarios_video1`
    FOREIGN KEY (`video_id_video`)
    REFERENCES `youtube`.`video` (`id_video`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`like_comentario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `youtube`.`like_comentario` ;

CREATE TABLE IF NOT EXISTS `youtube`.`like_comentario` (
  `user_id_user` INT NOT NULL,
  `video_id_video` INT NOT NULL,
  `like_o_dislike_coment` TINYINT NULL,
  `fecha_hora_dis_like_coment` DATETIME NULL,
  PRIMARY KEY (`user_id_user`, `video_id_video`),
  INDEX `fk_like_comentario_video1_idx` (`video_id_video` ASC) ,
  CONSTRAINT `fk_like_comentario_user1`
    FOREIGN KEY (`user_id_user`)
    REFERENCES `youtube`.`user` (`id_user`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_like_comentario_video1`
    FOREIGN KEY (`video_id_video`)
    REFERENCES `youtube`.`video` (`id_video`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
