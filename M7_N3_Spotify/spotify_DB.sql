-- MySQL Script generated by MySQL Workbench
-- Mon Jul  5 17:41:25 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Spotify
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `Spotify` ;

-- -----------------------------------------------------
-- Schema Spotify
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Spotify` DEFAULT CHARACTER SET utf8 ;
USE `Spotify` ;

-- -----------------------------------------------------
-- Table `Spotify`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`users` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`users` (
  `id_users` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(12) NOT NULL,
  `nickname` VARCHAR(25) NOT NULL,
  `fecha_nacimiento` DATE NULL,
  `sexo` ENUM('varon', 'mujer') NULL,
  `pais` VARCHAR(25) NULL,
  `cod_postal` VARCHAR(12) NULL,
  `suscripcion` ENUM('Free', 'Premium') NULL,
  PRIMARY KEY (`id_users`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`suscripciones`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`suscripciones` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`suscripciones` (
  `id_suscripcion` INT NOT NULL AUTO_INCREMENT,
  `fecha_inicio` DATE NOT NULL,
  `fecha_renovacion` DATE NOT NULL,
  `forma_de_pago` ENUM('tarjeta', 'Paypal') NULL,
  `users_id_users` INT NOT NULL,
  PRIMARY KEY (`id_suscripcion`, `users_id_users`),
  INDEX `fk_suscripciones_users_idx` (`users_id_users` ASC),
  CONSTRAINT `fk_suscripciones_users`
    FOREIGN KEY (`users_id_users`)
    REFERENCES `Spotify`.`users` (`id_users`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`tarjetas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`tarjetas` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`tarjetas` (
  `nro_tarjeta` BIGINT NOT NULL,
  `fecha_caducidad` DATE NOT NULL,
  `cod_seguridad` VARCHAR(3) NULL,
  `users_id_users` INT NOT NULL,
  PRIMARY KEY (`nro_tarjeta`, `users_id_users`),
  INDEX `fk_tarjetas_users1_idx` (`users_id_users` ASC),
  CONSTRAINT `fk_tarjetas_users1`
    FOREIGN KEY (`users_id_users`)
    REFERENCES `Spotify`.`users` (`id_users`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`cuentas_paypal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`cuentas_paypal` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`cuentas_paypal` (
  `id_cuentas_paypal` INT NOT NULL AUTO_INCREMENT,
  `nombre_usuario` VARCHAR(45) NOT NULL,
  `users_id_users` INT NOT NULL,
  PRIMARY KEY (`id_cuentas_paypal`, `users_id_users`),
  INDEX `fk_cuentas_paypal_users1_idx` (`users_id_users` ASC),
  INDEX `nombre_usuario` (`nombre_usuario` ASC),
  CONSTRAINT `fk_cuentas_paypal_users1`
    FOREIGN KEY (`users_id_users`)
    REFERENCES `Spotify`.`users` (`id_users`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`playlists`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`playlists` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`playlists` (
  `id_playlist` INT NOT NULL AUTO_INCREMENT,
  `users_id_users` INT NOT NULL,
  `titulo_playlist` VARCHAR(45) NULL,
  `numero_canciones` INT NULL,
  `fecha_creacion` DATE NULL,
  `estado` ENUM('activa', 'eliminada') NULL,
  PRIMARY KEY (`id_playlist`, `users_id_users`),
  INDEX `fk_playlists_users1_idx` (`users_id_users` ASC),
  CONSTRAINT `fk_playlists_users1`
    FOREIGN KEY (`users_id_users`)
    REFERENCES `Spotify`.`users` (`id_users`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`pagos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`pagos` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`pagos` (
  `id_pago` INT NOT NULL AUTO_INCREMENT,
  `fecha_pago` DATE NULL,
  `total` DECIMAL(5,2) NULL,
  `users_id_users` INT NOT NULL,
  PRIMARY KEY (`id_pago`, `users_id_users`),
  INDEX `fk_pagos_users1_idx` (`users_id_users` ASC),
  CONSTRAINT `fk_pagos_users1`
    FOREIGN KEY (`users_id_users`)
    REFERENCES `Spotify`.`users` (`id_users`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`playlist_eliminadas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`playlist_eliminadas` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`playlist_eliminadas` (
  `playlists_id_playlist` INT NOT NULL,
  `fecha_eliminacion` DATE NOT NULL,
  PRIMARY KEY (`playlists_id_playlist`),
  CONSTRAINT `fk_playlist_eliminadas_playlists1`
    FOREIGN KEY (`playlists_id_playlist`)
    REFERENCES `Spotify`.`playlists` (`id_playlist`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`playlist_compartidas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`playlist_compartidas` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`playlist_compartidas` (
  `playlists_id_playlist` INT NOT NULL,
  `users_id_users` INT NOT NULL COMMENT 'Importante: Usuario que agrega la canci√≥n',
  `fecha_agrega_cancion` DATE NULL,
  PRIMARY KEY (`playlists_id_playlist`, `users_id_users`),
  INDEX `fk_playlist_compartidas_users1_idx` (`users_id_users` ASC),
  CONSTRAINT `fk_playlist_compartidas_playlists1`
    FOREIGN KEY (`playlists_id_playlist`)
    REFERENCES `Spotify`.`playlists` (`id_playlist`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_playlist_compartidas_users1`
    FOREIGN KEY (`users_id_users`)
    REFERENCES `Spotify`.`users` (`id_users`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`artista`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`artista` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`artista` (
  `id_artista` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `link_imagen` VARCHAR(45) NULL,
  PRIMARY KEY (`id_artista`),
  INDEX `nombre` (`nombre` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`album`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`album` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`album` (
  `id_album` INT NOT NULL AUTO_INCREMENT,
  `titulo_album` VARCHAR(45) NULL,
  `any` SMALLINT(4) NULL,
  `link_portada` VARCHAR(255) NULL,
  `artista_id_artista` INT NOT NULL,
  PRIMARY KEY (`id_album`, `artista_id_artista`),
  INDEX `fk_album_artista1_idx` (`artista_id_artista` ASC),
  INDEX `titulo` (`titulo_album` ASC),
  CONSTRAINT `fk_album_artista1`
    FOREIGN KEY (`artista_id_artista`)
    REFERENCES `Spotify`.`artista` (`id_artista`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`cancion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`cancion` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`cancion` (
  `id_cancion` INT NOT NULL AUTO_INCREMENT,
  `album_id_album` INT NOT NULL,
  `titulo_cancion` VARCHAR(100) NULL,
  `duracion` VARCHAR(5) NULL,
  `reproducciones` INT NULL,
  PRIMARY KEY (`id_cancion`, `album_id_album`),
  INDEX `fk_cancion_album1_idx` (`album_id_album` ASC),
  INDEX `titulo_cancion` (`titulo_cancion` ASC),
  CONSTRAINT `fk_cancion_album1`
    FOREIGN KEY (`album_id_album`)
    REFERENCES `Spotify`.`album` (`id_album`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`artista_followers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`artista_followers` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`artista_followers` (
  `artista_id_artista` INT NOT NULL,
  `users_id_users` INT NOT NULL,
  PRIMARY KEY (`artista_id_artista`, `users_id_users`),
  INDEX `fk_artista_followers_users1_idx` (`users_id_users` ASC) ,
  CONSTRAINT `fk_artista_followers_artista1`
    FOREIGN KEY (`artista_id_artista`)
    REFERENCES `Spotify`.`artista` (`id_artista`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_artista_followers_users1`
    FOREIGN KEY (`users_id_users`)
    REFERENCES `Spotify`.`users` (`id_users`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`generos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`generos` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`generos` (
  `id_genero` INT NOT NULL AUTO_INCREMENT,
  `nombre_genero` VARCHAR(25) NULL,
  PRIMARY KEY (`id_genero`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`artistas_similares`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`artistas_similares` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`artistas_similares` (
  `artista_id_artista` INT NOT NULL,
  `generos_id_genero` INT NOT NULL,
  PRIMARY KEY (`artista_id_artista`, `generos_id_genero`),
  INDEX `fk_artistas_similares_generos1_idx` (`generos_id_genero` ASC),
  CONSTRAINT `fk_artistas_similares_artista1`
    FOREIGN KEY (`artista_id_artista`)
    REFERENCES `Spotify`.`artista` (`id_artista`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_artistas_similares_generos1`
    FOREIGN KEY (`generos_id_genero`)
    REFERENCES `Spotify`.`generos` (`id_genero`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`albumes_favoritos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`albumes_favoritos` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`albumes_favoritos` (
  `album_id_album` INT NOT NULL,
  `users_id_users` INT NOT NULL,
  PRIMARY KEY (`album_id_album`, `users_id_users`),
  INDEX `fk_albumes_favoritos_users1_idx` (`users_id_users` ASC),
  CONSTRAINT `fk_albumes_favoritos_album1`
    FOREIGN KEY (`album_id_album`)
    REFERENCES `Spotify`.`album` (`id_album`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_albumes_favoritos_users1`
    FOREIGN KEY (`users_id_users`)
    REFERENCES `Spotify`.`users` (`id_users`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spotify`.`canciones_favoritas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spotify`.`canciones_favoritas` ;

CREATE TABLE IF NOT EXISTS `Spotify`.`canciones_favoritas` (
  `cancion_id_cancion` INT NOT NULL,
  `users_id_users` INT NOT NULL,
  PRIMARY KEY (`cancion_id_cancion`, `users_id_users`),
  INDEX `fk_canciones_favoritas_users1_idx` (`users_id_users` ASC),
  CONSTRAINT `fk_canciones_favoritas_cancion1`
    FOREIGN KEY (`cancion_id_cancion`)
    REFERENCES `Spotify`.`cancion` (`id_cancion`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_canciones_favoritas_users1`
    FOREIGN KEY (`users_id_users`)
    REFERENCES `Spotify`.`users` (`id_users`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
